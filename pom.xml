<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.barclays.research</groupId>
    <artifactId>html-renderer</artifactId>
    <version>0.4.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>HTML Renderer</name>
    
    <!-- parent pom -->
    <parent>
        <groupId>com.barclays.research</groupId>
        <artifactId>parent-pom</artifactId>
        <version>1.0.0</version>
    </parent>
    
    <modules>
        <module>html-renderer-webapp</module>
    <module>html-renderer-webapp-client</module>
  </modules>
	
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.java.source>1.8</project.build.java.source>
        <project.build.java.target>1.8</project.build.java.target>

        <!-- Common -->
        <logback.version>1.1.3</logback.version>
        <swagger.version>2.4.0</swagger.version>
        <servlet.api.version>3.1.0</servlet.api.version>
        <jackson.version>2.5.4</jackson.version>		
        <commons.collections.version>4.0</commons.collections.version>		
        <ehcache.version>2.0.4</ehcache.version>
        <commons.lang.version>2.6</commons.lang.version>
        <commons.collections.version>4.0</commons.collections.version>
        <commons.io.version>2.4</commons.io.version>
        <commons.fileupload.version>1.3.1</commons.fileupload.version>
        <apache-httmime.version>4.5</apache-httmime.version>		
        <commons-research-version>1.0.0</commons-research-version>
        <content-archive-version>0.4.0</content-archive-version>
        <partial-response.version>1.0.0</partial-response.version>
        <qpp.version>11.2</qpp.version>

        <!-- Tests -->
        <hamcrest.version>1.3</hamcrest.version>
        <json-path.version>2.0.0</json-path.version>
        <junit.version>4.12</junit.version>
        <meanbean.version>2.0.3</meanbean.version>
        <h2.version>2.0.206</h2.version>
        <reflections.version>0.9.9-RC2</reflections.version>
        <el.version>3.0.0</el.version>
        <guava.version>18.0</guava.version>
        <mockito.version>1.10.8</mockito.version>
        <reportng.version>1.1.4</reportng.version>
        <google.guice.version>3.0</google.guice.version>

        <!-- Hibernate / JPS -->		
        <hibernate.validator.version>5.2.1.Final</hibernate.validator.version>

        <!-- Spring -->
        <spring.version>4.2.5.RELEASE</spring.version>		
        <spring.security.version>4.0.1.RELEASE</spring.security.version>		

        <jackson.joda.version>4.0.1.RELEASE</jackson.joda.version>
        
        <!-- Control if tests are run -->
        <skipTests>true</skipTests>
        <jacoco.report.ut>${project.build.directory}/coverage-reports/jacoco-ut.exec</jacoco.report.ut>				
    </properties>

    <profiles>
        <profile>
            <id>sonar</id>
            <properties>
                <!-- Sonar plugin setup -->
                <sonar.host.url>http://eqnyksonar001:9000</sonar.host.url>
                <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
            </properties>
        </profile>
        <profile>
            <id>code-coverage</id>
            <build>
                <plugins>
                    <!-- JaCoCo Coverage Report -->			
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>0.7.7.201606060606</version>
                        <executions>
                            <!-- Prepares the property pointing to the JaCoCo runtime agent which 
                            is passed as VM argument when Maven the Surefire plugin is executed. -->
                            <execution>
                                <id>pre-unit-test</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                                    <!-- Sets the name of the property containing the settings for JaCoCo 
                                    runtime agent. -->
                                    <propertyName>surefireArgLine</propertyName>
                                </configuration>
                            </execution>
                            <!-- Ensures that the code coverage report for unit tests is created 
                            after unit tests have been run. -->
                            <execution>
                                <id>post-unit-test</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                                    <!-- Sets the output directory for the code coverage report. -->
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                                </configuration>
                            </execution>
                            <!-- Prepares the property pointing to the JaCoCo runtime agent which 
                            is passed as VM argument when Maven the Failsafe plugin is executed. -->
                            <execution>
                                <id>pre-integration-test</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                                    <!-- Sets the name of the property containing the settings for JaCoCo 
                                    runtime agent. -->
                                    <propertyName>failsafeArgLine</propertyName>
                                </configuration>
                            </execution>
                            <!-- Ensures that the code coverage report for integration tests after 
                            integration tests have been run. -->
                            <execution>
                                <id>post-integration-test</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <configuration>
                                    <!-- Sets the path to the file which contains the execution data. -->
                                    <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                                    <!-- Sets the output directory for the code coverage report. -->
                                    <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                                </configuration>
                            </execution>
                            <!-- Merge results -->
                            <execution>
                                <id>merge-jacoco-results</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>merge</goal>
                                </goals>
                                <configuration>
                                    <fileSets>
                                        <fileSet implementation="org.apache.maven.shared.model.fileset.FileSet">
                                            <directory>${project.build.directory}/coverage-reports</directory>
                                            <includes>
                                                <include>*.exec</include>
                                            </includes>
                                        </fileSet>
                                    </fileSets>
                                    <destFile>${project.build.directory}/jacoco-overall.exec</destFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencyManagement>		
        <dependencies>
            <!-- Commons -->
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons.lang.version}</version>
            </dependency>
			
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons.collections.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>
			
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons.fileupload.version}</version> 
            </dependency>
			
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpmime</artifactId>
                <version>${apache-httmime.version}</version>
            </dependency>
		
            <!-- Spring Web -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>
			
            <!-- Spring Core -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
			
				        
            <!-- Hibernate -->		
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate.validator.version}</version>
            </dependency>
			
					
            <!-- Security -->
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-web</artifactId>
                <version>${spring.security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>${spring.security.version}</version>
            </dependency>

			
            <!-- Log Back -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <!-- REST API documentation -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>

            <!-- Servlet API -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet.api.version}</version>
                <scope>provided</scope>
            </dependency>
	
            <!-- JSON -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
			
			
            <!-- content-archive-commons -->
            <dependency>
                <groupId>com.barclays.research.contentarchive</groupId>
                <artifactId>content-archive-commons</artifactId>
                <version>${content-archive-version}</version>
            </dependency>
            
            
            <!-- qpp version -->
            <dependency>
			  <groupId>com.barclays.research.quark</groupId>
			  <artifactId>qpp-publishing-activities</artifactId>
			  <version>${qpp.version}</version>
			</dependency>   
			
			<dependency>
		  		<groupId>com.barclays.research.quark</groupId>
		  		<artifactId>qpp-publishing</artifactId>		
		  		<version>${qpp.version}</version>
			</dependency>
						
            <!-- Other -->
            <dependency>
                <groupId>com.barclays.rp.web</groupId>
                <artifactId>partial-response</artifactId>
                <version>${partial-response.version}</version>
            </dependency>
            <dependency>
                <groupId>com.barclays.research</groupId>
                <artifactId>commons-research</artifactId>
                <version>${commons-research-version}</version>
            </dependency>
            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache-web</artifactId>
                <version>${ehcache.version}</version>
            </dependency>
							

            <!-- Test -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.uncommons</groupId>
                <artifactId>reportng</artifactId>
                <version>${reportng.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${google.guice.version}</version>
            </dependency>        
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${json-path.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>${reflections.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>javax.el-api</artifactId>
                <version>${el.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.meanbean</groupId>
                <artifactId>meanbean</artifactId>
                <version>${meanbean.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava-testlib</artifactId>
                <version>${guava.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <developers>
        <developer>
            <id>kamatsan</id>
            <name>Sandesh Kamath</name>
            <email>sandesh.kamath@barclays.com</email>
            <url>http://onephonebook.barclays.intranet/GTD/Profile.aspx?BRID=G442738184</url>
            <timezone>-5</timezone>
        </developer>

        <developer>
            <id>bharathm</id>
            <name>Murugavel Bharathiraj</name>
            <email>Murugavel.Bharathiraj@barclayscapital.com</email>
            <url>http://onephonebook.barclays.intranet/GTD/Profile.aspx?BRID=</url>
            <timezone>-5</timezone>
        </developer>
    </developers>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Add JaCoCo coverage plugin to surefire -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.19.1</version>
                    <configuration>
                        <argLine>${surefireArgLine}</argLine>
                        <properties>
                            <property>
                                <name>usedefaultlisteners</name>
                                <value>false</value>
                            </property>
                            <property>
                                <name>listener</name>
                                <value>org.uncommons.reportng.HTMLReporter, org.uncommons.reportng.JUnitXMLReporter</value>
                            </property>
                        </properties>
                    </configuration>
                </plugin>
			
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>${project.build.java.source}</source>
                        <target>${project.build.java.target}</target>
                    </configuration>
                </plugin>
            </plugins>			
        </pluginManagement>		
    </build>	
</project>